<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Fessad_TL">
    <ResourceDictionary.MergedDictionaries>
        <!-- Order is important-->
        <ResourceDictionary Source="Colors.xaml"/>
        <ResourceDictionary Source="Fonts.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- Hoverless Button -->
    <Style TargetType="{x:Type Button}" x:Key="Hoverless">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        
        <Setter Property="Template">
            <Setter.Value>  
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>
    
    <!-- Second Button -->
    <Style TargetType="{x:Type Button}" x:Key="SystemIconButton" BasedOn="{StaticResource Hoverless}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Padding" Value="4"/>
    </Style>

    
    <!-- System Command Button [maximize, minimize] -->
    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton" BasedOn="{StaticResource Basic}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="8 0 8 0"/>
        

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.2"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackGroundLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    
    <!-- Window Close Button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    
     <!-- Default button in the app --> 
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource Basic}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="local:IsBusyProperty.Value" Value="False"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            CornerRadius="10" 
                            Background="{StaticResource TheOrangeBrush}"
                            Padding="20 10"
                            Margin="0 10"
                            SnapsToDevicePixels="True">

                        <Grid >
                            <TextBlock x:Name="block"
                                       Text="{TemplateBinding Content}" 
                                       Foreground="{StaticResource ForegroundLightBrush}"
                                       FontSize="{StaticResource FontSizeMedium}"
                                       SnapsToDevicePixels="True"
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisiblityConverter}}"/>

                            <!-- TODO: Adding busy rounding indicator -->
                            <TextBlock 
                                Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisiblityConverter}, ConverterParameter=True}"
                                Text="مشغول"
                                Foreground="{StaticResource ForegroundLightBrush}"
                                FontSize="{StaticResource FontSizeMedium}"/>
                        </Grid>
                        
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color" 
                                                    To="{StaticResource TheBlue}" 
                                                    Duration="0:0:0.15"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color" 
                                                    To="{StaticResource TheOrange}" 
                                                    Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource TheBlueBrush}"/>
                        </Trigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ForegroundDarkBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" TargetName="block" Value="{StaticResource TheBlueBrush}"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource TheOrangeBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Text button -->
    <Style TargetType="{x:Type Button}" x:Key="TextButton" BasedOn="{StaticResource Basic}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            CornerRadius="10" 
                            Background="{TemplateBinding Background}"
                            Padding="50 0"
                            Margin="0 10"
                            SnapsToDevicePixels="True">

                        <TextBlock x:Name="block"
                                   Text="{TemplateBinding Content}" 
                                   Foreground="{StaticResource ForegroundLightBrush}"
                                   FontSize="{StaticResource FontSizeSmall}"
                                   SnapsToDevicePixels="True"
                                   />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" TargetName="block" Value="DeepSkyBlue"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ForegroundDarkBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" TargetName="block" Value="Aqua"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style >
    

    <!-- The Blue Buttons in the upper bar -->
    <Style x:Key="IconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource Basic}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="local:IsBusyProperty.Value" Value="False"/>
        <Setter Property="Foreground" Value="{StaticResource BackGroundVeryLightBrush}"></Setter>

        <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            CornerRadius="0" 
                            Background="{StaticResource TheBlueBrush}"
                            Padding="0"
                            Margin="0"
                            SnapsToDevicePixels="True">

                        <Grid >
                            <Viewbox>
                                <TextBlock x:Name="block"
                                           Text="{TemplateBinding Content}" 
                                           Foreground="{TemplateBinding Foreground}"
                                           SnapsToDevicePixels="True"
                                           Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisiblityConverter}}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                           Padding="8"
                                           FontFamily="{StaticResource FontAwesome}"/>
                            </Viewbox>
                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color" 
                                                    To="{StaticResource TheLightBlue}" 
                                                    Duration="0:0:0.15"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color" 
                                                    To="{StaticResource TheBlue}" 
                                                    Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource TheBlueBrush}"/>
                        </Trigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ForegroundDarkBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" TargetName="block" Value="{StaticResource TheBlueBrush}"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource TheDarkBlueBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>